// Generated by JFlex 1.9.1 http://jflex.de/  (tweaked for IntelliJ platform)
// source: Sqlpplite.flex

package org.intellij.sdk.language.cblite;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import generated.cblite.GeneratedTypes;
import com.intellij.psi.TokenType;


class SqlppLiteLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int SingleQuotedString = 2;
  public static final int DoubleQuotedString = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2, 2
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\36\u0200\1\u0300\1\u0400\266\u0200\10\u0500\u1020\u0200";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\2\1\3\22\0\1\1"+
    "\1\4\1\5\1\0\1\6\1\7\1\10\1\11\1\12"+
    "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\7\25\1\26\1\27\1\30\1\31\1\32"+
    "\2\0\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61"+
    "\1\62\1\63\1\64\1\65\1\66\1\67\1\0\1\70"+
    "\1\71\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\72\1\51"+
    "\1\52\1\53\1\73\1\55\1\74\1\57\1\60\1\61"+
    "\1\62\1\63\1\64\1\0\1\75\10\0\1\3\252\0"+
    "\2\76\115\0\1\77\u01a8\0\2\3\u0100\0\1\100\325\0"+
    "\u0100\3";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[1536];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\3\0\1\1\1\2\1\1\1\3\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\2\17\1\20\1\21\1\22\1\23\1\24\26\25\1\26"+
    "\1\27\1\30\1\31\2\1\1\32\1\33\1\32\1\34"+
    "\1\32\1\35\2\0\1\36\1\37\1\40\1\41\1\42"+
    "\5\25\1\43\2\25\1\43\1\25\1\44\10\25\1\0"+
    "\11\25\1\45\2\46\3\25\1\47\2\25\1\0\3\25"+
    "\1\0\6\25\1\50\1\51\3\25\1\47\13\25\1\0"+
    "\6\25\1\0\6\25\1\52\1\0\1\45\7\0\1\53"+
    "\1\0\1\54\1\55\1\17\1\0\1\17\1\56\1\57"+
    "\1\60\1\25\1\61\1\0\1\25\1\61\2\25\1\0"+
    "\1\25\1\0\7\25\1\0\2\25\1\0\1\25\1\0"+
    "\1\25\1\0\1\25\1\62\1\25\1\0\12\25\1\0"+
    "\2\25\1\0\2\25\2\0\1\25\1\0\5\25\1\0"+
    "\2\25\1\0\3\25\2\0\4\25\1\63\10\25\1\0"+
    "\1\25\1\0\24\25\1\0\2\25\1\0\1\25\1\0"+
    "\1\25\1\0\1\25\1\0\3\25\14\0\1\25\1\47"+
    "\1\25\2\64\6\25\2\65\2\25\1\0\1\25\1\0"+
    "\2\66\2\25\1\0\1\25\1\0\1\25\1\67\3\25"+
    "\1\0\2\25\1\0\4\25\1\0\2\25\1\0\1\25"+
    "\5\0\2\70\1\71\1\25\1\72\1\25\1\0\1\72"+
    "\2\25\2\0\2\25\1\0\2\25\1\0\2\25\1\73"+
    "\2\25\1\0\2\25\1\0\1\25\1\0\1\25\1\0"+
    "\5\25\1\0\1\25\1\74\2\25\1\0\1\75\5\25"+
    "\1\0\1\76\1\25\1\47\1\0\1\25\1\0\2\25"+
    "\1\0\1\77\1\25\6\0\1\74\2\0\2\25\1\0"+
    "\6\25\1\0\1\25\1\0\2\25\1\0\2\100\1\25"+
    "\1\101\1\25\1\0\1\25\1\0\1\47\1\25\1\0"+
    "\2\25\1\102\1\0\1\25\5\0\1\25\2\103\1\25"+
    "\1\0\1\25\1\0\1\25\1\0\1\25\1\0\1\25"+
    "\1\0\1\25\1\0\6\25\1\0\1\104\1\105\2\25"+
    "\2\0\1\25\1\0\4\25\1\0\2\25\1\0\1\25"+
    "\4\47\2\25\1\0\2\25\1\0\1\106\1\47\1\0"+
    "\1\102\3\0\2\25\1\0\10\25\1\0\1\25\1\0"+
    "\1\25\1\0\1\25\2\107\2\110\1\25\1\0\2\25"+
    "\1\0\1\47\1\25\1\0\1\25\2\0\4\47\1\25"+
    "\2\0\2\111\1\25\1\0\1\25\1\0\2\25\1\0"+
    "\1\25\2\112\1\25\2\0\2\25\1\0\1\113\1\25"+
    "\1\47\2\25\1\0\2\25\1\0\1\114\1\25\2\0"+
    "\1\47\1\113\1\0\13\25\2\0\1\115\4\0\2\25"+
    "\1\0\6\25\1\0\1\25\1\0\1\25\1\0\2\25"+
    "\1\0\2\25\1\0\1\25\1\47\2\0\1\25\1\0"+
    "\2\116\1\25\1\0\1\25\1\0\2\25\1\0\3\25"+
    "\1\0\2\25\1\0\2\117\1\25\4\0\3\25\1\0"+
    "\12\25\6\0\1\25\1\0\6\25\1\0\2\120\1\25"+
    "\1\0\2\25\1\0\1\25\1\0\1\25\1\0\1\25"+
    "\1\0\1\25\1\0\1\25\1\0\1\25\1\0\10\25"+
    "\1\0\5\25\1\0\3\25\4\0\2\25\1\0\4\25"+
    "\1\0\1\25\1\0\3\25\4\0\4\25\1\0\1\25"+
    "\1\0\1\25\1\0\2\47\1\25\1\0\2\25\1\0"+
    "\1\25\1\0\2\121\6\25\1\0\2\25\1\0\1\25"+
    "\2\122\2\25\3\0\1\25\1\0\3\25\1\0\2\25"+
    "\2\0\1\25\2\123\1\25\1\0\1\25\1\0\1\25"+
    "\1\0\2\47\1\25\1\0\1\25\1\0\5\25\1\0"+
    "\3\25\2\0\1\25\1\0\3\25\2\0\1\25\1\0"+
    "\1\25\1\0\1\25\1\0\1\25\1\0\1\25\1\0"+
    "\1\25\1\0\1\25\1\0\1\25\1\0\2\124\1\25"+
    "\1\0\1\25\1\0\2\47\1\25\1\0\1\25\7\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[841];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\101\0\202\0\303\0\u0104\0\u0145\0\303\0\303"+
    "\0\303\0\303\0\303\0\303\0\303\0\303\0\303\0\u0186"+
    "\0\303\0\303\0\u01c7\0\u0208\0\303\0\303\0\u0249\0\u028a"+
    "\0\u02cb\0\u030c\0\u034d\0\u038e\0\u03cf\0\u0410\0\u0451\0\u0492"+
    "\0\u04d3\0\u0514\0\u0555\0\u0596\0\u05d7\0\u0618\0\u0659\0\u069a"+
    "\0\u06db\0\u071c\0\u075d\0\u079e\0\u07df\0\u0820\0\u0861\0\303"+
    "\0\303\0\303\0\u08a2\0\u08e3\0\u0924\0\303\0\303\0\u0965"+
    "\0\303\0\u09a6\0\303\0\u09e7\0\u0a28\0\303\0\303\0\303"+
    "\0\303\0\303\0\u0a69\0\u0aaa\0\u0aeb\0\u0b2c\0\u0b6d\0\u0bae"+
    "\0\u0bef\0\u0c30\0\u0c71\0\u0cb2\0\u0596\0\u0cf3\0\u0d34\0\u0d75"+
    "\0\u0db6\0\u0df7\0\u0e38\0\u0e79\0\u0eba\0\u0efb\0\u0f3c\0\u0f7d"+
    "\0\u0fbe\0\u0fff\0\u1040\0\u1081\0\u10c2\0\u1103\0\u1144\0\u1185"+
    "\0\u11c6\0\u1207\0\u1248\0\u1289\0\u12ca\0\u0596\0\u130b\0\u134c"+
    "\0\u138d\0\u13ce\0\u140f\0\u1450\0\u1491\0\u14d2\0\u1513\0\u1554"+
    "\0\u1595\0\u15d6\0\u1617\0\u0596\0\u1658\0\u1699\0\u16da\0\u171b"+
    "\0\303\0\u175c\0\u179d\0\u17de\0\u181f\0\u1860\0\u18a1\0\u18e2"+
    "\0\u1923\0\u1964\0\u19a5\0\u19e6\0\u1a27\0\u1a68\0\u1aa9\0\u1aea"+
    "\0\u1b2b\0\u1b6c\0\u1bad\0\u1bee\0\u1c2f\0\u1c70\0\u1cb1\0\u1cf2"+
    "\0\u1d33\0\u1d74\0\303\0\u1db5\0\u1df6\0\u1e37\0\u1e78\0\u1eb9"+
    "\0\u1efa\0\u1f3b\0\u1f7c\0\u1fbd\0\303\0\u1ffe\0\303\0\303"+
    "\0\u203f\0\u2080\0\u2080\0\u0596\0\u0596\0\u0596\0\u20c1\0\u0596"+
    "\0\u2102\0\u2143\0\303\0\u2184\0\u21c5\0\u2206\0\u2247\0\u2288"+
    "\0\u22c9\0\u230a\0\u234b\0\u238c\0\u23cd\0\u240e\0\u244f\0\u2490"+
    "\0\u24d1\0\u2512\0\u2553\0\u2594\0\u25d5\0\u2616\0\u2657\0\u2698"+
    "\0\u0596\0\u26d9\0\u271a\0\u275b\0\u279c\0\u27dd\0\u281e\0\u285f"+
    "\0\u28a0\0\u28e1\0\u2922\0\u2963\0\u29a4\0\u29e5\0\u2a26\0\u2a67"+
    "\0\u2aa8\0\u2ae9\0\u2b2a\0\u2b6b\0\u2bac\0\u2bed\0\u2c2e\0\u2c6f"+
    "\0\u2cb0\0\u2cf1\0\u2d32\0\u2d73\0\u2db4\0\u2df5\0\u2e36\0\u2e77"+
    "\0\u2eb8\0\u2ef9\0\u2f3a\0\u2f7b\0\u2fbc\0\u2ffd\0\u303e\0\u307f"+
    "\0\u30c0\0\u0596\0\u3101\0\u3142\0\u3183\0\u31c4\0\u3205\0\u3246"+
    "\0\u3287\0\u32c8\0\u3309\0\u334a\0\u338b\0\u33cc\0\u340d\0\u344e"+
    "\0\u348f\0\u34d0\0\u3511\0\u3552\0\u3593\0\u35d4\0\u3615\0\u3656"+
    "\0\u3697\0\u36d8\0\u3719\0\u375a\0\u379b\0\u37dc\0\u381d\0\u385e"+
    "\0\u389f\0\u38e0\0\u3921\0\u3962\0\u39a3\0\u39e4\0\u3a25\0\u3a66"+
    "\0\u3aa7\0\u3ae8\0\u3b29\0\u3b6a\0\u3bab\0\u3bec\0\u3c2d\0\u3c6e"+
    "\0\u3caf\0\u3cf0\0\u3d31\0\u3d72\0\u3db3\0\u3df4\0\u3e35\0\u3e76"+
    "\0\u3eb7\0\u3ef8\0\u3f39\0\u3f7a\0\u3fbb\0\u0596\0\303\0\u3ffc"+
    "\0\u403d\0\u407e\0\u40bf\0\u4100\0\u4141\0\u0596\0\303\0\u4182"+
    "\0\u41c3\0\u4204\0\u4245\0\u4286\0\u0596\0\303\0\u42c7\0\u4308"+
    "\0\u4349\0\u438a\0\u43cb\0\u440c\0\u0596\0\u444d\0\u448e\0\u44cf"+
    "\0\u4510\0\u4551\0\u4592\0\u45d3\0\u4614\0\u4655\0\u4696\0\u46d7"+
    "\0\u4718\0\u4759\0\u479a\0\u47db\0\u481c\0\u485d\0\u489e\0\u48df"+
    "\0\u4920\0\u4961\0\u0596\0\303\0\u0596\0\u49a2\0\u0596\0\u49e3"+
    "\0\u4a24\0\303\0\u4a65\0\u4aa6\0\u4ae7\0\u4b28\0\u4b69\0\u4baa"+
    "\0\u4beb\0\u4c2c\0\u4c6d\0\u4cae\0\u4cef\0\u4d30\0\u2ffd\0\u4d71"+
    "\0\u4db2\0\u4df3\0\u4e34\0\u4e75\0\u4eb6\0\u4ef7\0\u4f38\0\u4f79"+
    "\0\u4fba\0\u4ffb\0\u503c\0\u507d\0\u50be\0\u50ff\0\u5140\0\u5181"+
    "\0\u0596\0\u51c2\0\u5203\0\u5244\0\u0596\0\u5285\0\u52c6\0\u5307"+
    "\0\u5348\0\u5389\0\u53ca\0\u0596\0\u540b\0\u544c\0\u548d\0\u54ce"+
    "\0\u550f\0\u5550\0\u5591\0\u55d2\0\u0596\0\u5613\0\u5654\0\u5695"+
    "\0\u56d6\0\u5717\0\u5758\0\u5799\0\303\0\u57da\0\u581b\0\u585c"+
    "\0\u589d\0\u58de\0\u591f\0\u5960\0\u59a1\0\u59e2\0\u5a23\0\u5a64"+
    "\0\u5aa5\0\u5ae6\0\u5b27\0\u5b68\0\u5ba9\0\u5bea\0\u0596\0\303"+
    "\0\u5c2b\0\u0596\0\u5c6c\0\u5cad\0\u5cee\0\u5d2f\0\u5d70\0\u5db1"+
    "\0\u5df2\0\u5e33\0\u5e74\0\u0596\0\u5eb5\0\u5ef6\0\u5f37\0\u5f78"+
    "\0\u5fb9\0\u5ffa\0\u603b\0\u607c\0\u0596\0\303\0\u60bd\0\u60fe"+
    "\0\u613f\0\u6180\0\u61c1\0\u6202\0\u6243\0\u6284\0\u62c5\0\u6306"+
    "\0\u6347\0\u6388\0\u63c9\0\u640a\0\u644b\0\u648c\0\u64cd\0\u650e"+
    "\0\u654f\0\u0596\0\u0596\0\u6590\0\u65d1\0\u6612\0\u6653\0\u6694"+
    "\0\u66d5\0\u6716\0\u6757\0\u6798\0\u67d9\0\u681a\0\u685b\0\u689c"+
    "\0\u68dd\0\u691e\0\u695f\0\u69a0\0\u69e1\0\u6a22\0\u6a63\0\u6aa4"+
    "\0\u6ae5\0\u6b26\0\u6b67\0\u6ba8\0\u0596\0\u6be9\0\u6c2a\0\303"+
    "\0\u6c6b\0\u6cac\0\u6ced\0\u6d2e\0\u6d6f\0\u6db0\0\u6df1\0\u6e32"+
    "\0\u6e73\0\u6eb4\0\u6ef5\0\u6f36\0\u6f77\0\u6fb8\0\u6ff9\0\u703a"+
    "\0\u707b\0\u70bc\0\u70fd\0\u713e\0\u0596\0\303\0\u0596\0\303"+
    "\0\u717f\0\u71c0\0\u7201\0\u7242\0\u7283\0\u72c4\0\u7305\0\u7346"+
    "\0\u7387\0\u73c8\0\u7409\0\u744a\0\u748b\0\u74cc\0\u750d\0\u754e"+
    "\0\u758f\0\u75d0\0\u0596\0\303\0\u7611\0\u7652\0\u7693\0\u76d4"+
    "\0\u7715\0\u7756\0\u7797\0\u77d8\0\u0596\0\303\0\u7819\0\u785a"+
    "\0\u789b\0\u78dc\0\u791d\0\u795e\0\u0596\0\u799f\0\u79e0\0\u7a21"+
    "\0\u7a62\0\u7aa3\0\u7ae4\0\u7b25\0\u7b66\0\u0596\0\u7ba7\0\u7be8"+
    "\0\u7c29\0\u7c6a\0\303\0\u7cab\0\u7cec\0\u7d2d\0\u7d6e\0\u7daf"+
    "\0\u7df0\0\u7e31\0\u7e72\0\u7eb3\0\u7ef4\0\u7f35\0\u7f76\0\u7fb7"+
    "\0\u7ff8\0\u0596\0\u8039\0\u807a\0\u80bb\0\u80fc\0\u813d\0\u817e"+
    "\0\u81bf\0\u8200\0\u8241\0\u8282\0\u82c3\0\u8304\0\u8345\0\u8386"+
    "\0\u83c7\0\u8408\0\u8449\0\u848a\0\u84cb\0\u850c\0\u854d\0\u858e"+
    "\0\u85cf\0\u8610\0\u8651\0\u8692\0\u86d3\0\u8714\0\u8755\0\u8796"+
    "\0\u2ffd\0\u75d0\0\u87d7\0\u8818\0\u8859\0\u889a\0\u88db\0\u891c"+
    "\0\u895d\0\u899e\0\u89df\0\u8a20\0\u8a61\0\u8aa2\0\u8ae3\0\u8b24"+
    "\0\u0596\0\303\0\u8b65\0\u8ba6\0\u8be7\0\u8c28\0\u8c69\0\u8caa"+
    "\0\u8ceb\0\u8d2c\0\u8d6d\0\u8dae\0\u8def\0\u8e30\0\u8e71\0\u8eb2"+
    "\0\u8ef3\0\u8f34\0\u8f75\0\u8fb6\0\u8ff7\0\u9038\0\u9079\0\u90ba"+
    "\0\u90fb\0\u913c\0\u917d\0\u91be\0\u91ff\0\u9240\0\u9281\0\u92c2"+
    "\0\u9303\0\u9344\0\u9385\0\u93c6\0\u0596\0\303\0\u9407\0\u9448"+
    "\0\u9489\0\u94ca\0\u950b\0\u954c\0\u958d\0\u95ce\0\u960f\0\u9650"+
    "\0\u9691\0\u96d2\0\u9713\0\u9754\0\u9795\0\u97d6\0\u9817\0\u9858"+
    "\0\u9899\0\u98da\0\u991b\0\u995c\0\u999d\0\u99de\0\u9a1f\0\u9a60"+
    "\0\u9aa1\0\u9ae2\0\u9b23\0\u9b64\0\u9ba5\0\u9be6\0\u9c27\0\u9c68"+
    "\0\u9ca9\0\u9cea\0\u9d2b\0\u9d6c\0\u9dad\0\u9dee\0\u9e2f\0\u9e70"+
    "\0\u9eb1\0\u9ef2\0\u9f33\0\u9f74\0\u9fb5\0\u9ff6\0\ua037\0\ua078"+
    "\0\ua0b9\0\ua0fa\0\ua13b\0\ua17c\0\ua1bd\0\ua1fe\0\ua23f\0\ua280"+
    "\0\ua2c1\0\ua302\0\ua343\0\ua384\0\ua3c5\0\ua406\0\ua447\0\ua488"+
    "\0\ua4c9\0\ua50a\0\ua54b\0\ua58c\0\ua5cd\0\ua60e\0\ua64f\0\ua690"+
    "\0\u0596\0\303\0\ua6d1\0\ua712\0\ua753\0\ua794\0\ua7d5\0\ua816"+
    "\0\ua857\0\ua898\0\ua8d9\0\ua91a\0\ua95b\0\u0596\0\303\0\ua99c"+
    "\0\ua9dd\0\uaa1e\0\uaa5f\0\uaaa0\0\uaae1\0\uab22\0\uab63\0\uaba4"+
    "\0\uabe5\0\uac26\0\uac67\0\uaca8\0\uace9\0\uad2a\0\uad6b\0\u0596"+
    "\0\303\0\uadac\0\uaded\0\uae2e\0\uae6f\0\uaeb0\0\uaef1\0\uaf32"+
    "\0\uaf73\0\uafb4\0\uaff5\0\ub036\0\ub077\0\ub0b8\0\ub0f9\0\ub13a"+
    "\0\ub17b\0\ub1bc\0\ub1fd\0\ub23e\0\ub27f\0\ub2c0\0\ub301\0\ub342"+
    "\0\ub383\0\ub3c4\0\ub405\0\ub446\0\ub487\0\ub4c8\0\ub509\0\ub54a"+
    "\0\ub58b\0\ub5cc\0\ub60d\0\ub64e\0\ub68f\0\ub6d0\0\ub711\0\ub752"+
    "\0\ub793\0\u69a0\0\u748b\0\ub7d4\0\ub815\0\ub856\0\ub897\0\u0596"+
    "\0\303\0\ub8d8\0\ub919\0\u544c\0\ub95a\0\ub99b\0\ub9dc\0\uba1d"+
    "\0\uba5e\0\uba9f\0\ubae0\0\ubb21\0\ubb62\0\ubba3\0\ubbe4\0\ubc25"+
    "\0\ubc66";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[841];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length() - 1;
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpacktrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\4\2\5\1\0\1\6\1\7\1\4\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\3\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\44\1\52\1\53\1\54\1\55\1\56\1\57\3\44"+
    "\1\60\1\4\1\61\1\44\1\62\1\47\1\52\1\54"+
    "\1\63\1\64\1\65\1\4\2\66\2\0\5\66\1\67"+
    "\54\66\1\70\14\66\2\0\1\66\1\71\60\66\1\72"+
    "\12\66\102\0\2\5\127\0\1\73\71\0\1\23\3\24"+
    "\73\0\1\74\16\0\1\75\61\0\1\74\1\0\4\24"+
    "\11\0\1\75\71\0\1\76\1\77\1\100\77\0\1\101"+
    "\100\0\1\102\55\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\44\1\103\1\104\10\44\1\105\1\44\1\106"+
    "\3\44\1\107\1\110\1\111\1\44\1\112\4\44\3\0"+
    "\1\44\1\0\1\106\1\107\1\111\2\0\1\113\7\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\114"+
    "\23\44\1\115\1\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\1\116\3\44"+
    "\1\117\6\44\1\120\2\44\1\121\13\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\122\3\44\1\123\3\44\1\124\13\44\1\125"+
    "\5\44\3\0\1\44\1\0\3\44\1\0\1\126\10\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\13\44\1\127"+
    "\1\44\1\130\11\44\1\131\2\44\3\0\1\44\1\0"+
    "\1\130\2\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\132\12\44\1\133\5\44\1\134\10\44\3\0"+
    "\1\44\1\0\1\44\1\134\1\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\21\44\1\135\10\44\3\0"+
    "\1\44\1\0\1\44\1\135\1\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\136\31\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\5\44\1\137\7\44\1\140\4\44\1\141\7\44"+
    "\3\0\1\44\1\0\1\140\2\44\2\0\1\142\7\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\16\44\1\143"+
    "\13\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\144\3\44\1\145\4\44\1\146\1\147\4\44"+
    "\1\150\6\44\3\0\1\44\1\0\1\146\1\44\1\150"+
    "\1\0\1\151\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\152\3\44\1\153\3\44\1\154\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\155\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\156\3\44\1\157\11\44"+
    "\1\160\5\44\1\161\5\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\1\44"+
    "\1\162\3\44\1\163\7\44\1\164\3\44\1\165\2\44"+
    "\1\166\5\44\3\0\1\44\1\0\1\164\1\165\1\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\1\167"+
    "\7\44\1\146\5\44\1\170\13\44\3\0\1\44\1\0"+
    "\3\44\1\0\1\171\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\1\172\3\44\1\173\11\44\1\174\4\44"+
    "\1\150\6\44\3\0\1\44\1\0\2\44\1\150\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\1\175\3\44"+
    "\1\176\3\44\1\177\5\44\1\200\1\201\1\202\2\44"+
    "\1\203\1\204\5\44\3\0\1\44\1\0\2\44\1\203"+
    "\1\0\1\205\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\206\6\44\1\207\1\210\5\44\1\211\2\44"+
    "\1\212\6\44\1\213\1\44\3\0\1\44\1\0\1\44"+
    "\1\212\1\44\1\0\1\214\10\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\215\1\44\1\216\4\44"+
    "\1\217\5\44\3\0\1\44\1\0\1\215\2\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\1\220\31\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\4\44\1\221\2\44\1\222\22\44"+
    "\3\0\1\44\1\0\3\44\101\0\1\223\43\0\1\224"+
    "\7\0\1\225\4\0\1\142\14\0\1\225\4\0\1\142"+
    "\34\0\1\226\3\0\1\227\3\0\1\205\5\0\1\230"+
    "\1\231\1\232\2\0\1\233\1\234\14\0\1\233\1\0"+
    "\1\205\13\0\1\235\45\0\1\236\6\0\1\237\3\0"+
    "\3\237\11\0\1\240\51\0\1\236\6\0\1\237\3\0"+
    "\3\237\26\0\4\241\70\0\1\242\1\0\1\242\2\0"+
    "\4\243\61\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\146\7\44\3\0\1\44\1\0\3\44\2\0"+
    "\1\171\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\103\13\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\13\44\1\244"+
    "\16\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\3\44\1\245\24\44\1\246"+
    "\1\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\21\44\1\247\10\44\3\0"+
    "\1\44\1\0\1\44\1\247\1\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\2\44\1\250\5\44\1\206"+
    "\21\44\3\0\1\44\1\0\3\44\1\0\1\251\10\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\1\252\31\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\6\44\1\146\23\44\3\0\1\44"+
    "\1\0\3\44\41\0\1\253\5\0\1\251\32\0\1\251"+
    "\10\0\1\44\10\0\1\44\2\0\4\44\5\0\23\44"+
    "\1\254\6\44\3\0\1\44\1\0\2\44\1\254\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\22\44\1\255"+
    "\7\44\3\0\1\44\1\0\3\44\2\0\1\256\7\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\10\44\1\257"+
    "\21\44\3\0\1\44\1\0\3\44\1\0\1\260\10\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\16\44\1\261"+
    "\13\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\15\44\1\262\4\44\1\146"+
    "\1\44\1\263\5\44\3\0\1\44\1\0\1\262\2\44"+
    "\2\0\1\171\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\23\44\1\264\6\44\3\0\1\44\1\0\2\44"+
    "\1\264\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\2\44\1\265\3\44\1\266\13\44\1\267\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\270\7\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\271\21\44\1\272\7\44"+
    "\3\0\1\44\1\0\3\44\2\0\1\273\7\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\21\44\1\274\10\44"+
    "\3\0\1\44\1\0\1\44\1\274\1\44\37\0\1\275"+
    "\21\0\1\273\21\0\1\273\7\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\22\44\1\276\7\44\3\0\1\44"+
    "\1\0\3\44\2\0\1\277\7\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\2\44\1\300\1\301\26\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\10\44\1\302\6\44\1\146\12\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\303\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\13\44\1\304\16\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\16\44\1\305\13\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\306\13\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\307"+
    "\11\44\1\310\13\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\25\44\1\311"+
    "\4\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\312\3\44\1\313"+
    "\1\314\14\44\3\0\1\315\1\0\1\314\2\44\1\0"+
    "\1\316\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\317\4\44\1\320\14\44\3\0\1\44\1\0"+
    "\1\320\2\44\1\0\1\321\10\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\1\322\31\44\3\0\1\323\1\0"+
    "\3\44\37\0\1\324\34\0\1\325\16\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\326\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\327\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\330\4\44\1\331\7\44"+
    "\1\332\14\44\3\0\1\44\1\0\1\332\2\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\12\44\1\333"+
    "\1\44\1\334\15\44\3\0\1\44\1\0\3\44\3\0"+
    "\1\335\6\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\6\44\1\146\17\44\1\336\3\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\337\10\44\3\0\1\44\1\0\1\44\1\337"+
    "\1\44\51\0\1\335\1\0\1\340\30\0\1\335\6\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\27\44\1\146"+
    "\2\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\23\44\1\341\6\44\3\0"+
    "\1\44\1\0\2\44\1\341\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\13\44\1\342\1\44\1\146\4\44"+
    "\1\343\7\44\3\0\1\44\1\0\1\146\2\44\2\0"+
    "\1\344\47\0\1\345\1\0\1\171\4\0\1\344\14\0"+
    "\1\171\4\0\1\344\7\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\15\44\1\346\14\44\3\0\1\44\1\0"+
    "\1\346\2\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\6\44\1\347\23\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\2\44"+
    "\1\350\1\351\17\44\1\352\1\353\1\44\1\354\3\44"+
    "\3\0\1\44\1\0\2\44\1\352\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\13\44\1\355\16\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\11\44\1\356\20\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\5\44\1\357\24\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\3\44\1\360"+
    "\26\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\23\44\1\361\6\44\3\0"+
    "\1\44\1\0\2\44\1\361\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\362\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\363\10\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\22\44\1\364\3\44\1\336\3\44"+
    "\3\0\1\44\1\0\3\44\2\0\1\365\7\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\3\44\1\366\11\44"+
    "\1\367\14\44\3\0\1\44\1\0\1\367\2\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\6\44\1\370"+
    "\10\44\1\371\5\44\1\372\4\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\24\44\1\373\5\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\23\44\1\374"+
    "\6\44\3\0\1\44\1\0\2\44\1\374\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\13\44\1\375\16\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\6\44\1\206\6\44\1\146\14\44"+
    "\3\0\1\44\1\0\1\146\2\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\14\44\1\376\15\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\13\44\1\377\16\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\u0100\10\44\3\0\1\44\1\0\1\44\1\u0100"+
    "\1\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\u0101\10\44\3\0\1\44\1\0\1\44\1\u0101"+
    "\1\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\44\1\u0102\12\44\1\146\15\44\3\0\1\44\1\0"+
    "\3\44\45\0\1\251\6\0\1\171\21\0\1\171\14\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\15\44\1\146"+
    "\14\44\3\0\1\44\1\0\1\146\2\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u0103\25\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\23\44\1\u0104\6\44\3\0\1\44"+
    "\1\0\2\44\1\u0104\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\1\u0105\1\u0106\13\44\1\u0107\1\u0108\3\44"+
    "\1\u0109\7\44\3\0\1\323\1\0\1\u0107\2\44\2\0"+
    "\1\u010a\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u010b\13\44\1\u010c\5\44\3\0\1\44\1\0"+
    "\3\44\1\0\1\u010d\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\17\44\1\u010e\12\44\3\0\1\44\1\0"+
    "\3\44\62\0\1\u010f\15\0\1\u010f\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\u0110\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\u0111\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\17\44\1\336\12\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\10\44\1\u0112\21\44\3\0\1\44\1\0"+
    "\3\44\1\0\1\u0113\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\13\44\1\u0114\16\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\u0115\25\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u0116"+
    "\25\44\3\0\1\44\1\0\3\44\47\0\1\316\3\0"+
    "\1\u0117\1\u0118\17\0\1\u0119\1\0\1\u0118\3\0\1\316"+
    "\45\0\1\321\4\0\1\u011a\21\0\1\u011a\3\0\1\321"+
    "\60\0\1\u011b\15\0\1\u011b\52\0\1\u011c\101\0\1\u011d"+
    "\77\0\1\u011e\106\0\1\u011f\16\0\1\u011f\61\0\1\u0120"+
    "\16\0\1\u0120\41\0\1\u0121\12\0\1\171\53\0\4\u0122"+
    "\5\0\6\u0122\62\0\4\241\11\0\1\75\63\0\4\243"+
    "\61\0\1\44\10\0\1\44\2\0\4\44\5\0\1\u0123"+
    "\31\44\3\0\1\44\1\0\3\44\54\0\1\171\21\0"+
    "\1\171\14\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\15\44\1\u0124\14\44\3\0\1\44\1\0\1\u0124\2\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\26\44"+
    "\1\u0125\3\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u0126\25\44"+
    "\3\0\1\44\1\0\3\44\43\0\1\u0127\47\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\13\44\1\146\16\44"+
    "\3\0\1\44\1\0\3\44\52\0\1\171\40\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\2\44\1\u0128\27\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\2\44\1\u0129\20\44\1\u012a\6\44"+
    "\3\0\1\44\1\0\2\44\1\u012a\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\15\44\1\u0100\14\44\3\0"+
    "\1\44\1\0\1\u0100\2\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\4\44\1\u012b\25\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\16\44\1\u012c\13\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\21\44"+
    "\1\u012d\10\44\3\0\1\44\1\0\1\44\1\u012d\1\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\2\44"+
    "\1\u012e\27\44\3\0\1\44\1\0\3\44\41\0\1\u012f"+
    "\51\0\1\44\10\0\1\44\2\0\4\44\5\0\2\44"+
    "\1\u0130\27\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\23\44\1\u0131\6\44"+
    "\3\0\1\44\1\0\2\44\1\u0131\62\0\1\u0132\15\0"+
    "\1\u0132\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u0133\31\44\3\0\1\44\1\0\3\44\41\0\1\u0134"+
    "\51\0\1\44\10\0\1\44\2\0\4\44\5\0\4\44"+
    "\1\u0135\25\44\3\0\1\44\1\0\3\44\43\0\1\u0136"+
    "\47\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u0137\13\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\22\44\1\u0138\7\44"+
    "\3\0\1\44\1\0\3\44\2\0\1\u0139\56\0\1\u0139"+
    "\21\0\1\u0139\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\22\44\1\u013a\7\44\3\0\1\44\1\0\3\44"+
    "\2\0\1\u013b\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\16\44\1\u013c\13\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\14\44"+
    "\1\u013d\15\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u013e\31\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\24\44\1\u013f\5\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u0140\21\44\3\0\1\44\1\0\3\44\1\0"+
    "\1\u0141\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\15\44\1\u0142\14\44\3\0\1\44\1\0\1\u0142\2\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\10\44"+
    "\1\u0143\21\44\3\0\1\44\1\0\3\44\1\0\1\u0144"+
    "\10\0\1\44\10\0\1\44\2\0\4\44\5\0\1\u0145"+
    "\23\44\1\u0146\5\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\10\44\1\312"+
    "\3\44\1\u0147\1\u0148\14\44\3\0\1\44\1\0\1\u0148"+
    "\2\44\1\0\1\316\52\0\1\u0149\21\0\1\u0149\14\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\23\44\1\u014a"+
    "\6\44\3\0\1\44\1\0\2\44\1\u014a\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u014b\25\44"+
    "\3\0\1\44\1\0\3\44\62\0\1\u014c\15\0\1\u014c"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\21\44"+
    "\1\u014d\10\44\3\0\1\44\1\0\1\44\1\u014d\1\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\1\u0105"+
    "\1\u0106\13\44\1\u0107\1\u0108\3\44\1\u0109\7\44\3\0"+
    "\1\44\1\0\1\u0107\2\44\2\0\1\u010a\55\0\1\u014e"+
    "\16\0\1\u014e\40\0\1\u014f\1\u0150\13\0\1\u0151\1\u0152"+
    "\3\0\1\u010a\14\0\1\u0151\4\0\1\u010a\7\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\15\44\1\u0153\14\44"+
    "\3\0\1\44\1\0\1\u0153\2\44\54\0\1\u0154\21\0"+
    "\1\u0154\14\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\u0100\7\44\3\0\1\44\1\0\3\44\2\0"+
    "\1\u011f\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\23\44\1\u0155\6\44\3\0\1\44\1\0\2\44\1\u0155"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\6\44"+
    "\1\u0156\23\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u0157\25\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\u0158\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\u0159\41\0\1\u015a\47\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u013c\25\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\u010b\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\u010d\45\0\1\u0159\32\0\1\u0159"+
    "\10\0\1\44\10\0\1\44\2\0\4\44\5\0\1\146"+
    "\31\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\13\44\1\u015b\16\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\22\44\1\u015c\7\44\3\0\1\44\1\0"+
    "\3\44\2\0\1\u015d\56\0\1\u015d\21\0\1\u015d\47\0"+
    "\1\u015e\40\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u0142\21\44\3\0\1\u015f\1\0\3\44\1\0"+
    "\1\u0149\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u0160\21\44\3\0\1\44\1\0\3\44\1\0"+
    "\1\u0161\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u0162\31\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u0163\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u0164\10\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\15\44\1\u0165\14\44"+
    "\3\0\1\44\1\0\1\u0165\2\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u0166\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\13\44\1\u0167\16\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u0168"+
    "\25\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\22\44\1\u0169\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\u016a\7\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\4\44\1\u016b\25\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\4\44\1\u016c\25\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\103\10\44\3\0\1\44\1\0\1\44\1\103"+
    "\1\44\60\0\1\u016d\16\0\1\u016d\13\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\u016e\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\u016f\45\0\1\u016f\32\0"+
    "\1\u016f\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u0170\21\44\3\0\1\44\1\0\3\44\1\0"+
    "\1\u0171\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\3\44\1\u0172\26\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u0173"+
    "\25\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\4\44\1\u0129\6\44\1\u0174"+
    "\16\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\4\44\1\u0175\25\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\15\44\1\u0112\14\44\3\0\1\44\1\0"+
    "\1\u0112\2\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\10\44\1\u0176\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\u0177\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\u0178\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\4\44"+
    "\1\u0179\25\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u0100\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u011f\10\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\23\44\1\146\6\44"+
    "\3\0\1\44\1\0\2\44\1\146\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u017a\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\u017b\7\44\3\0\1\44\1\0\3\44\2\0"+
    "\1\u017c\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\15\44\1\u017d\14\44\3\0\1\44\1\0\1\u017d\2\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\13\44"+
    "\1\u017e\16\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\21\44\1\u014d\1\44"+
    "\1\u0172\6\44\3\0\1\44\1\0\1\44\1\u014d\1\u0172"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u017f\13\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\24\44\1\u0180\5\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\1\44\1\u0181\30\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\23\44\1\u0182\6\44\3\0\1\44\1\0\2\44"+
    "\1\u0182\62\0\1\u0183\15\0\1\u0183\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\14\44\1\146\15\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\4\44\1\u0184\10\44\1\u0185\14\44\3\0"+
    "\1\44\1\0\1\u0185\2\44\53\0\1\171\37\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u0186\25\44"+
    "\3\0\1\44\1\0\3\44\52\0\1\u0187\40\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\2\44\1\u0188\27\44"+
    "\3\0\1\44\1\0\3\44\41\0\1\u0189\51\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\3\44\1\146\26\44"+
    "\3\0\1\44\1\0\3\44\42\0\1\171\50\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\24\44\1\u018a\5\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\12\44\1\u018b\17\44\3\0\1\44"+
    "\1\0\3\44\3\0\1\u018c\6\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\u018d\3\44\1\u018e\10\44"+
    "\3\0\1\44\1\0\1\u018d\1\u018e\1\44\47\0\1\u0144"+
    "\32\0\1\u0144\35\0\1\u018f\23\0\1\u0190\64\0\1\316"+
    "\3\0\1\u0191\1\u0192\21\0\1\u0192\3\0\1\316\41\0"+
    "\1\u0193\104\0\1\u0177\32\0\1\u0177\41\0\1\u0194\100\0"+
    "\1\u0195\104\0\1\u011f\32\0\1\u011f\60\0\1\171\15\0"+
    "\1\171\74\0\1\u0196\65\0\1\u017c\21\0\1\u017c\23\0"+
    "\4\u0197\5\0\6\u0197\46\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\30\44\1\u0198\1\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\2\44\1\146"+
    "\1\44\5\0\32\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u0199"+
    "\25\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\12\44\1\354\17\44\3\0"+
    "\1\44\1\0\3\44\3\0\1\u019a\6\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\u0100\31\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\u019b\31\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\32\44\3\0"+
    "\1\u019c\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\3\44\1\u019d\26\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\u019e\25\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\21\44\1\u019f"+
    "\10\44\3\0\1\44\1\0\1\44\1\u019f\1\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\10\44\1\u01a0"+
    "\21\44\3\0\1\44\1\0\3\44\1\0\1\u01a1\45\0"+
    "\1\u01a1\32\0\1\u01a1\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\23\44\1\u01a2\6\44\3\0\1\44\1\0"+
    "\2\44\1\u01a2\60\0\1\u01a3\16\0\1\u01a3\13\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\3\44\1\u01a4\26\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\23\44\1\u01a5\6\44\3\0\1\44"+
    "\1\0\2\44\1\u01a5\62\0\1\u01a6\15\0\1\u01a6\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u01a7"+
    "\25\44\3\0\1\44\1\0\3\44\43\0\1\u01a8\47\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\21\44\1\146"+
    "\10\44\3\0\1\44\1\0\1\44\1\146\1\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\23\44\1\u01a9"+
    "\6\44\3\0\1\44\1\0\2\44\1\u01a9\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\17\44\1\u01aa\12\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\u01ab\14\44\3\0\1\44"+
    "\1\0\1\u01ab\2\44\54\0\1\u01ac\21\0\1\u01ac\14\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\5\44\1\146"+
    "\24\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\22\44\1\u01ad\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\u01ae\56\0\1\u01ae\21\0"+
    "\1\u01ae\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\15\44\1\u01af\14\44\3\0\1\44\1\0\1\u01af\2\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\13\44"+
    "\1\257\16\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u01b0\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u01b1\10\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u01b2\23\44\1\u0146"+
    "\5\44\3\0\1\44\1\0\3\44\44\0\1\171\46\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\2\44\1\u01b3"+
    "\27\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\21\44\1\u01b4\10\44\3\0"+
    "\1\44\1\0\1\44\1\u01b4\1\44\41\0\1\u01b5\51\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\21\44\1\u01b6"+
    "\10\44\3\0\1\44\1\0\1\44\1\u01b6\1\44\60\0"+
    "\1\u01b7\16\0\1\u01b7\61\0\1\u014e\1\0\1\u01b8\14\0"+
    "\1\u014e\1\u01b8\55\0\1\u01b9\106\0\1\u01ba\55\0\1\u01bb"+
    "\52\0\1\44\10\0\1\44\2\0\4\44\5\0\23\44"+
    "\1\u01bc\6\44\3\0\1\44\1\0\2\44\1\u01bc\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\23\44\1\u01bd"+
    "\6\44\3\0\1\44\1\0\2\44\1\u01bd\62\0\1\u01be"+
    "\15\0\1\u01be\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\10\44\1\u01bf\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\u01c0\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\10\44\1\u01c1\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\u01c2\45\0\1\u01c2\32\0\1\u01c2\45\0\1\u01c0"+
    "\32\0\1\u01c0\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\10\44\1\u0142\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\u0149\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\15\44\1\u01c3\14\44\3\0\1\44\1\0\1\u01c3"+
    "\2\44\54\0\1\u01c4\21\0\1\u01c4\14\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\22\44\1\u01c5\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\u01c6\7\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\u01c7\31\44\3\0\1\44"+
    "\1\0\3\44\37\0\1\u01c8\53\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\u01c9\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\u01ca\10\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\13\44\1\u01cb\1\u01cc\5\44\1\u017b"+
    "\1\u01cd\1\u01ce\5\44\3\0\1\44\1\0\2\44\1\u01cd"+
    "\2\0\1\u017c\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\2\44\1\u01cf\27\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\4\44"+
    "\1\u01d0\25\44\3\0\1\44\1\0\3\44\43\0\1\u01d1"+
    "\47\0\1\44\10\0\1\44\2\0\4\44\5\0\21\44"+
    "\1\u01d2\10\44\3\0\1\44\1\0\1\44\1\u01d2\1\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\21\44"+
    "\1\u01d3\10\44\3\0\1\44\1\0\1\44\1\u01d3\1\44"+
    "\61\0\1\171\21\0\1\171\7\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\u01d4\5\44\1\u01d5\6\44"+
    "\3\0\1\44\1\0\1\u01d4\1\44\1\u01d5\54\0\1\u01d6"+
    "\5\0\1\u01d7\13\0\1\u01d6\1\0\1\u01d7\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u01d8\31\44\3\0"+
    "\1\44\1\0\3\44\37\0\1\u01d9\53\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\16\44\1\u010b\13\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\27\44\1\u01da\2\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u01db\31\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\21\44\1\u01dc\10\44"+
    "\3\0\1\44\1\0\1\44\1\u01dc\1\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\22\44\1\u01dd\7\44"+
    "\3\0\1\44\1\0\3\44\2\0\1\u01de\56\0\1\u01de"+
    "\21\0\1\u01de\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\2\44\1\u01df\27\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\23\44"+
    "\1\u01e0\6\44\3\0\1\44\1\0\2\44\1\u01e0\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\23\44\1\u013c"+
    "\6\44\3\0\1\44\1\0\2\44\1\u013c\62\0\1\u01e1"+
    "\15\0\1\u01e1\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\146\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u01e2\13\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\14\44\1\u01e3\15\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\11\44\1\u01e4\20\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\21\44\1\u01e5\10\44\3\0\1\44\1\0\1\44"+
    "\1\u01e5\1\44\60\0\1\u01e6\16\0\1\u01e6\13\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\2\44\1\146\27\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\u01e7\14\44\3\0\1\44"+
    "\1\0\1\u01e7\2\44\43\0\1\171\47\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\16\44\1\u01e8\13\44\3\0"+
    "\1\44\1\0\3\44\55\0\1\u01e9\35\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\4\44\1\u01ea\25\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\3\44\1\u01eb\26\44\3\0\1\44\1\0"+
    "\3\44\42\0\1\u01ec\50\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\4\44\1\u01ed\25\44\3\0\1\44\1\0"+
    "\3\44\54\0\1\u01ee\21\0\1\u01ee\54\0\1\260\75\0"+
    "\1\u01b1\32\0\1\u01b1\35\0\1\u01ef\23\0\1\u0190\75\0"+
    "\1\u01f0\16\0\1\u01f0\42\0\1\u01f1\121\0\1\u01f2\15\0"+
    "\1\u01f2\26\0\4\u01f3\5\0\6\u01f3\46\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u01f4\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\u01f5\25\44\3\0\1\44\1\0\3\44\74\0"+
    "\1\u01f6\16\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u01d8\21\44\3\0\1\44\1\0\3\44\1\0"+
    "\1\u01d9\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u01f7\2\44\1\u01f8\1\44\1\u01f9\11\44\1\u01fa\1\44"+
    "\1\u01fb\1\44\1\u01fc\6\44\3\0\1\44\1\0\1\44"+
    "\1\u01fb\1\u01fc\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\u01fd\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\4\44"+
    "\1\103\25\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u01fe\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u01ff\10\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\15\44\1\u0200\14\44"+
    "\3\0\1\44\1\0\1\u0200\2\44\54\0\1\u0201\21\0"+
    "\1\u0201\14\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u0202\21\44\3\0\1\44\1\0\3\44\1\0"+
    "\1\u0203\45\0\1\u01ff\32\0\1\u01ff\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\4\44\1\u0204\25\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\22\44\1\u0205\7\44\3\0\1\44\1\0"+
    "\3\44\2\0\1\u0206\56\0\1\u0206\21\0\1\u0206\7\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\330"+
    "\25\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\6\44\1\u0207\23\44\3\0"+
    "\1\44\1\0\3\44\45\0\1\u0208\45\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\22\44\1\u0209\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\u020a\56\0\1\u020a\21\0"+
    "\1\u020a\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\u020b\13\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\22\44\1\u020c"+
    "\7\44\3\0\1\44\1\0\3\44\2\0\1\u020d\56\0"+
    "\1\u020d\21\0\1\u020d\7\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\15\44\1\u020e\14\44\3\0\1\44\1\0"+
    "\1\u020e\2\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\1\u020f\31\44\3\0\1\44\1\0\3\44\37\0"+
    "\1\u0210\53\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u0211\31\44\3\0\1\44\1\0\3\44\37\0\1\u0212"+
    "\116\0\1\u010d\100\0\1\u0213\76\0\1\u0214\75\0\1\u0215"+
    "\42\0\1\44\10\0\1\44\2\0\4\44\5\0\7\44"+
    "\1\146\22\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\22\44\1\u0216\7\44"+
    "\3\0\1\44\1\0\3\44\2\0\1\u0217\56\0\1\u0217"+
    "\21\0\1\u0217\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\15\44\1\u0218\14\44\3\0\1\44\1\0\1\u0218"+
    "\2\44\54\0\1\u0219\21\0\1\u0219\14\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\5\44\1\346\24\44\3\0"+
    "\1\44\1\0\3\44\44\0\1\u021a\46\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\4\44\1\u021b\25\44\3\0"+
    "\1\44\1\0\3\44\43\0\1\u021c\47\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\2\44\1\u021d\27\44\3\0"+
    "\1\44\1\0\3\44\41\0\1\u021e\51\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\2\44\1\u021f\27\44\3\0"+
    "\1\44\1\0\3\44\41\0\1\u0220\51\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\16\44\1\u0221\13\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\10\44\1\u0222\21\44\3\0\1\44\1\0"+
    "\3\44\1\0\1\u0223\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\31\44\1\146\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\23\44"+
    "\1\u0185\6\44\3\0\1\44\1\0\2\44\1\u0185\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\23\44\1\u0224"+
    "\6\44\3\0\1\44\1\0\2\44\1\u0224\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\23\44\1\u0225\6\44"+
    "\3\0\1\44\1\0\2\44\1\u0225\62\0\1\u0226\15\0"+
    "\1\u0226\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\5\44\1\u015f\24\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\10\44\1\u0227"+
    "\21\44\3\0\1\44\1\0\3\44\1\0\1\u0228\42\0"+
    "\1\u0229\103\0\1\u0228\32\0\1\u0228\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\15\44\1\103\14\44\3\0"+
    "\1\44\1\0\1\103\2\44\54\0\1\u016d\21\0\1\u016d"+
    "\14\0\1\44\10\0\1\44\2\0\4\44\5\0\17\44"+
    "\1\u022a\12\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\2\44\1\u017e\27\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\22\44\1\u017e\7\44\3\0\1\44"+
    "\1\0\3\44\2\0\1\u0187\7\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\5\44\1\u022b\24\44\3\0\1\44"+
    "\1\0\3\44\44\0\1\u022c\46\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\23\44\1\u022d\6\44\3\0\1\44"+
    "\1\0\2\44\1\u022d\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\16\44\1\u022e\13\44\3\0\1\44\1\0"+
    "\3\44\60\0\1\171\16\0\1\171\13\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\13\44\1\u022f\16\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\1\44\1\336\30\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\u0230\25\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\10\44\1\u0231"+
    "\21\44\3\0\1\44\1\0\3\44\1\0\1\u0232\45\0"+
    "\1\u0232\32\0\1\u0232\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\1\u0233\31\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\3\44"+
    "\1\u0234\26\44\3\0\1\44\1\0\3\44\42\0\1\u0235"+
    "\50\0\1\44\10\0\1\44\2\0\4\44\5\0\3\44"+
    "\1\u0236\26\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u0237\31\44\3\0"+
    "\1\44\1\0\3\44\37\0\1\u0238\116\0\1\u0239\77\0"+
    "\1\u023a\21\0\1\u023a\64\0\1\u023b\15\0\1\u023b\55\0"+
    "\1\u023c\51\0\4\237\5\0\6\237\46\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\u023d\1\44\1\u023e\1\u023f"+
    "\1\44\1\u0240\2\44\1\u0241\2\44\1\u0242\1\u0243\2\44"+
    "\1\u0244\1\44\1\u0245\1\u0246\1\44\1\u0247\5\44\3\0"+
    "\1\44\1\0\1\44\1\u0245\1\44\1\0\1\u0248\1\u0249"+
    "\7\0\1\44\10\0\1\44\2\0\4\44\5\0\15\44"+
    "\1\u024a\14\44\3\0\1\44\1\0\1\u024a\2\44\52\0"+
    "\1\u024b\1\u024c\5\0\1\u017c\1\u024d\1\u024e\14\0\1\u024d"+
    "\2\0\1\u017c\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\3\44\1\u024f\26\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\10\44"+
    "\1\u0250\21\44\3\0\1\44\1\0\3\44\1\0\1\u0251"+
    "\10\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u0252\13\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u0253\31\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\1\u0254\31\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\21\44"+
    "\1\u0255\10\44\3\0\1\44\1\0\1\44\1\u0255\1\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\32\44"+
    "\3\0\1\u0256\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\23\44\1\u0257\6\44\3\0\1\44"+
    "\1\0\2\44\1\u0257\62\0\1\u0258\15\0\1\u0258\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\2\44\1\u0259"+
    "\27\44\3\0\1\44\1\0\3\44\41\0\1\u025a\51\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\16\44\1\u025b"+
    "\13\44\3\0\1\44\1\0\3\44\55\0\1\u025c\35\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\3\44\1\u025d"+
    "\26\44\3\0\1\u0256\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\u025e\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\u025f\45\0\1\u025f\32\0"+
    "\1\u025f\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\u0260\10\44\3\0\1\44\1\0\1\44\1\u0260"+
    "\1\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\u0261\7\44\3\0\1\44\1\0\3\44\2\0"+
    "\1\u0262\56\0\1\u0262\21\0\1\u0262\7\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u0263\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\17\44\1\146\12\44\3\0\1\44\1\0\3\44\56\0"+
    "\1\171\34\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\30\44\1\146\1\44\3\0\1\44\1\0\3\44\67\0"+
    "\1\171\63\0\1\u0264\66\0\1\u0265\103\0\1\u0266\47\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\32\44\3\0"+
    "\1\u0267\1\0\3\44\74\0\1\u0268\16\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\6\44\1\u0269\23\44\3\0"+
    "\1\44\1\0\3\44\45\0\1\u026a\102\0\1\u0149\24\0"+
    "\1\u0229\5\0\1\u0149\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\21\44\1\u026b\10\44\3\0\1\44\1\0"+
    "\1\44\1\u026b\1\44\60\0\1\u026c\16\0\1\u026c\13\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\16\44\1\u026d"+
    "\13\44\3\0\1\44\1\0\3\44\55\0\1\u026e\35\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\2\44\1\u026f"+
    "\27\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\13\44\1\u0270\16\44\3\0"+
    "\1\44\1\0\3\44\52\0\1\u0271\40\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u0272\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\206\13\44\3\0\1\44\1\0\3\44\55\0"+
    "\1\251\72\0\1\u0149\32\0\1\u0149\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u0273\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\10\44\1\u0274\21\44\3\0\1\44\1\0\3\44\1\0"+
    "\1\u0275\45\0\1\u0275\32\0\1\u0275\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\32\44\3\0\1\u0276\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\u0277\25\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\2\44\1\u0100"+
    "\27\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\15\44\1\112\14\44\3\0"+
    "\1\44\1\0\1\112\2\44\54\0\1\u0278\21\0\1\u0278"+
    "\14\0\1\44\10\0\1\44\2\0\4\44\5\0\14\44"+
    "\1\u017e\15\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u0279\25\44"+
    "\3\0\1\44\1\0\3\44\43\0\1\u027a\47\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\30\44\1\u027b\1\44"+
    "\3\0\1\44\1\0\3\44\67\0\1\u027c\71\0\1\u027d"+
    "\16\0\1\u027d\75\0\1\u027e\100\0\1\u027f\16\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\17\44\1\u0280\5\44"+
    "\1\112\4\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\16\44\1\u0281\13\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\u0282\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\u0283\10\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\13\44\1\u0284\16\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\5\44\1\u0285\7\44\1\u0286\14\44\3\0\1\44"+
    "\1\0\1\u0286\2\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\4\44\1\u0287\25\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\152\7\44\1\206\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\251\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\16\44\1\u0288\2\44\1\u0289\2\44\1\u0100\5\44"+
    "\3\0\1\44\1\0\1\44\1\u0289\1\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u028a\3\44\1\u028b"+
    "\25\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\16\44\1\202\4\44\1\u028c"+
    "\1\u010b\3\44\1\u028d\1\44\3\0\1\44\1\0\2\44"+
    "\1\u028c\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\15\44\1\u01d5\14\44\3\0\1\44\1\0\1\u01d5\2\44"+
    "\44\0\1\u028e\7\0\1\u028f\21\0\1\u028f\57\0\1\232"+
    "\4\0\1\u0290\1\u010d\3\0\1\u0291\10\0\1\u0290\55\0"+
    "\1\u0292\72\0\1\u0223\32\0\1\u0223\66\0\1\171\72\0"+
    "\1\u0293\15\0\1\u0293\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\3\44\1\u027b\26\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\5\44\1\u0294\24\44\3\0\1\44\1\0\3\44\44\0"+
    "\1\u0295\46\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\u0296\10\44\3\0\1\44\1\0\1\44\1\u0296"+
    "\1\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\u0297\10\44\3\0\1\44\1\0\1\44\1\u0297"+
    "\1\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\15\44\1\u0298\14\44\3\0\1\44\1\0\1\u0298\2\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\24\44"+
    "\1\u0299\5\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\11\44\1\u029a\20\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\u029b\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\u029c\45\0\1\u029c\32\0\1\u029c"+
    "\10\0\1\44\10\0\1\44\2\0\4\44\5\0\23\44"+
    "\1\u029d\6\44\3\0\1\44\1\0\2\44\1\u029d\62\0"+
    "\1\u029e\15\0\1\u029e\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\15\44\1\u029f\14\44\3\0\1\44\1\0"+
    "\1\u029f\2\44\54\0\1\u02a0\21\0\1\u02a0\14\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\32\44\3\0\1\u02a1"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\15\44\1\u02a2\14\44\3\0\1\44\1\0\1\u02a2"+
    "\2\44\54\0\1\u02a3\21\0\1\u02a3\14\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\312\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\316\10\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\10\44\1\u02a4\21\44\3\0"+
    "\1\44\1\0\3\44\1\0\1\u02a5\45\0\1\u02a5\32\0"+
    "\1\u02a5\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\u02a6\13\44\3\0\1\44\1\0\3\44\43\0"+
    "\1\u02a7\100\0\1\u01e1\76\0\1\u011f\51\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\23\44\1\u02a8\6\44\3\0"+
    "\1\44\1\0\2\44\1\u02a8\62\0\1\u02a9\15\0\1\u02a9"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\10\44"+
    "\1\u02aa\21\44\3\0\1\44\1\0\3\44\1\0\1\u02ab"+
    "\45\0\1\u02ab\32\0\1\u02ab\10\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\3\44\1\u02ac\26\44\3\0\1\44"+
    "\1\0\3\44\42\0\1\u02ad\50\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\1\257\31\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\13\44\1\u02ae\16\44\3\0\1\44\1\0\3\44\52\0"+
    "\1\u02af\40\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u02b0\1\44\1\u02b1\5\44\1\u02b2\2\44\1\u0242\1\44"+
    "\1\u02b3\1\44\1\u02b4\1\44\1\u02b5\2\44\1\u02b6\1\u02b7"+
    "\4\44\3\0\1\44\1\0\1\u02b3\1\u02b5\1\44\1\0"+
    "\1\u02b8\10\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\2\44\1\u02b9\10\44\1\u02ba\3\44\1\u02bb\1\44\1\u02bc"+
    "\10\44\3\0\1\44\1\0\1\44\1\u02bc\1\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u02bd"+
    "\25\44\3\0\1\44\1\0\3\44\43\0\1\u02be\47\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\3\44\1\u02bf"+
    "\10\44\1\u01cc\6\44\1\u01cd\1\u01ce\4\44\1\u02c0\3\0"+
    "\1\44\1\0\2\44\1\u01cd\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\1\206\31\44\3\0\1\44\1\0"+
    "\3\44\45\0\1\171\45\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\32\44\3\0\1\u02c1\1\0\3\44\74\0"+
    "\1\u02c2\53\0\1\316\32\0\1\316\53\0\1\u02c3\65\0"+
    "\1\u02c4\10\0\1\u024c\6\0\1\u024d\1\u024e\4\0\1\u02c5"+
    "\7\0\1\u024d\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\17\44\1\u02c6\12\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\15\44"+
    "\1\262\6\44\1\263\5\44\3\0\1\44\1\0\1\262"+
    "\2\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\u02c7\7\44\3\0\1\44\1\0\3\44\2\0"+
    "\1\u02c8\56\0\1\u02c8\21\0\1\u02c8\7\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\u02c9\31\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\15\44\1\u02ca\14\44\3\0\1\44\1\0\1\u02ca"+
    "\2\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\u02cb\1\u02cc\6\44\3\0\1\44\1\0\2\44"+
    "\1\u02cc\2\0\1\u02cd\7\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\15\44\1\332\14\44\3\0\1\44\1\0"+
    "\1\332\2\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\22\44\1\u02ce\7\44\3\0\1\44\1\0\3\44"+
    "\2\0\1\u02cf\7\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\u0280\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\15\44"+
    "\1\u02d0\14\44\3\0\1\44\1\0\1\u02d0\2\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\14\44\1\u02d1"+
    "\2\44\1\371\5\44\1\372\4\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\1\u013c\31\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\14\44\1\u02d2\15\44"+
    "\3\0\1\44\1\0\3\44\54\0\1\u02d3\21\0\1\u02d3"+
    "\63\0\1\u02cd\1\u02d4\15\0\1\u02d4\2\0\1\u02cd\34\0"+
    "\1\u01e1\114\0\1\u02d5\66\0\1\u02d6\100\0\1\171\51\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\5\44\1\u027b"+
    "\24\44\3\0\1\44\1\0\3\44\44\0\1\u027c\46\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\14\44\1\u02d7"+
    "\15\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\23\44\1\u027b\6\44\3\0"+
    "\1\44\1\0\2\44\1\u027b\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\6\44\1\u02d8\23\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\15\44\1\u02d9\14\44\3\0\1\44\1\0\1\u02d9"+
    "\2\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\22\44\1\u0227\7\44\3\0\1\44\1\0\3\44\2\0"+
    "\1\u0228\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\2\44\1\u02da\27\44\3\0\1\44\1\0\3\44\41\0"+
    "\1\u02db\51\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\32\44\3\0\1\u02dc\1\0\3\44\74\0\1\u02dd\16\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\22\44\1\u02de"+
    "\7\44\3\0\1\44\1\0\3\44\2\0\1\u02df\7\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\6\44\1\u02e0"+
    "\23\44\3\0\1\44\1\0\3\44\45\0\1\u02e1\45\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\15\44\1\u02e2"+
    "\14\44\3\0\1\44\1\0\1\u02e2\2\44\54\0\1\u02e3"+
    "\21\0\1\u02e3\14\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\21\44\1\u02e4\10\44\3\0\1\44\1\0\1\44"+
    "\1\u02e4\1\44\37\0\1\251\53\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\16\44\1\u02e5\13\44\3\0\1\44"+
    "\1\0\3\44\55\0\1\u02e6\35\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\23\44\1\u02e7\6\44\3\0\1\44"+
    "\1\0\2\44\1\u02e7\62\0\1\u02e8\15\0\1\u02e8\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\u02e9"+
    "\25\44\3\0\1\44\1\0\3\44\43\0\1\u02ea\47\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\10\44\1\103"+
    "\21\44\3\0\1\44\1\0\3\44\1\0\1\u016d\45\0"+
    "\1\u016d\32\0\1\u016d\10\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\3\44\1\u0112\26\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\u02eb\13\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\15\44\1\u02ec"+
    "\14\44\3\0\1\44\1\0\1\u02ec\2\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\1\u02ed\31\44\3\0"+
    "\1\44\1\0\3\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\1\167\23\44\1\u0100\5\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\u02ee\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\15\44"+
    "\1\u02ef\14\44\3\0\1\44\1\0\1\u02ef\2\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\1\u02f0\31\44"+
    "\3\0\1\44\1\0\3\44\54\0\1\u02f1\21\0\1\u02f1"+
    "\14\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u02f2\13\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u02f3\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u02f4\10\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\16\44\1\u0288\13\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\4\44\1\u02f5\25\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\22\44\1\u02f6\7\44\3\0\1\44\1\0\3\44"+
    "\2\0\1\u02f7\56\0\1\u02f7\21\0\1\u02f7\7\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\24\44\1\u02f8\5\44"+
    "\3\0\1\44\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\16\44\1\u02f9\13\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\14\44\1\u01cc\5\44\1\u017b\7\44\3\0\1\44"+
    "\1\0\3\44\2\0\1\u017c\50\0\1\u024c\5\0\1\u017c"+
    "\21\0\1\u017c\55\0\1\u02fa\16\0\1\u02fa\64\0\1\u02fb"+
    "\72\0\1\u02fc\35\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\373\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\23\44"+
    "\1\u02fd\6\44\3\0\1\44\1\0\2\44\1\u02fd\62\0"+
    "\1\u02fe\15\0\1\u02fe\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\23\44\1\u02ff\6\44\3\0\1\44\1\0"+
    "\2\44\1\u02ff\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\24\44\1\u0146\5\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\4\44"+
    "\1\202\25\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\4\44\1\u0300\25\44"+
    "\3\0\1\44\1\0\3\44\43\0\1\232\47\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u0301\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u0302\45\0\1\u0302"+
    "\32\0\1\u0302\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\6\44\1\u017e\23\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u0303\13\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\3\44\1\u0304\26\44"+
    "\3\0\1\44\1\0\3\44\63\0\1\u0190\60\0\1\u0305"+
    "\77\0\1\u0306\75\0\1\260\53\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\1\u0307\31\44\3\0\1\44\1\0"+
    "\3\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\4\44\1\u027b\25\44\3\0\1\44\1\0\3\44\12\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\2\44\1\u027b"+
    "\27\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\22\44\1\u0308\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\u0309\56\0\1\u0309\21\0"+
    "\1\u0309\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\23\44\1\u030a\6\44\3\0\1\44\1\0\2\44\1\u030a"+
    "\62\0\1\u030b\15\0\1\u030b\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\10\44\1\u030c\21\44\3\0\1\44"+
    "\1\0\3\44\1\0\1\u030d\45\0\1\u030d\32\0\1\u030d"+
    "\10\0\1\44\10\0\1\44\2\0\4\44\5\0\16\44"+
    "\1\u030e\13\44\3\0\1\44\1\0\3\44\55\0\1\u030f"+
    "\35\0\1\44\10\0\1\44\2\0\4\44\5\0\6\44"+
    "\1\u0310\23\44\3\0\1\44\1\0\3\44\45\0\1\u0311"+
    "\45\0\1\44\10\0\1\44\2\0\4\44\5\0\32\44"+
    "\3\0\1\u0260\1\0\3\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\32\44\3\0\1\u0312\1\0\3\44"+
    "\74\0\1\u0313\16\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\10\44\1\u0314\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\u0315\45\0\1\u0315\32\0\1\u0315\10\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\15\44\1\u0316\14\44"+
    "\3\0\1\44\1\0\1\u0316\2\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\15\44\1\u0317\14\44\3\0"+
    "\1\44\1\0\1\u0317\2\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\14\44\1\u019e\15\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\14\44\1\u02d1\1\u01e7\1\44\1\u0318\12\44\3\0"+
    "\1\44\1\0\1\u01e7\2\44\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\26\44\1\u0319\3\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\13\44\1\u031a\16\44\3\0\1\44\1\0\3\44"+
    "\54\0\1\u031b\21\0\1\u031b\14\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\u031c\14\44\3\0\1\44"+
    "\1\0\1\u031c\2\44\12\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\12\44\1\u017e\17\44\3\0\1\44\1\0"+
    "\3\44\3\0\1\u0187\45\0\1\u0187\32\0\1\u0187\6\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\17\44\1\u0318"+
    "\12\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\21\44\1\u031d\10\44\3\0"+
    "\1\44\1\0\1\44\1\u031d\1\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\15\44\1\u031e\14\44\3\0"+
    "\1\44\1\0\1\u031e\2\44\74\0\1\u027d\64\0\1\u031f"+
    "\16\0\1\u031f\55\0\1\u0320\21\0\1\u0320\14\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\10\44\1\u0321\21\44"+
    "\3\0\1\44\1\0\3\44\1\0\1\u0322\45\0\1\u0322"+
    "\32\0\1\u0322\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\23\44\1\u0323\6\44\3\0\1\44\1\0\2\44"+
    "\1\u0323\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\21\44\1\u0324\10\44\3\0\1\44\1\0\1\44\1\u0324"+
    "\1\44\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\23\44\1\u01d5\6\44\3\0\1\44\1\0\2\44\1\u01d5"+
    "\62\0\1\u01d7\15\0\1\u01d7\12\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\25\44\1\u017e\4\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\10\44\1\u0325\21\44\3\0\1\44\1\0\3\44"+
    "\1\0\1\u0326\56\0\1\u0327\16\0\1\u0327\50\0\1\u0326"+
    "\32\0\1\u0326\10\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\23\44\1\u0328\6\44\3\0\1\44\1\0\2\44"+
    "\1\u0328\12\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\16\44\1\u0328\13\44\3\0\1\44\1\0\3\44\55\0"+
    "\1\u0329\35\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\31\44\1\u017e\3\0\1\44\1\0\3\44\70\0\1\u0187"+
    "\22\0\1\44\10\0\1\44\2\0\4\44\5\0\21\44"+
    "\1\u0285\10\44\3\0\1\44\1\0\1\44\1\u0285\1\44"+
    "\60\0\1\u028e\16\0\1\u028e\13\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\32\44\3\0\1\u032a\1\0\3\44"+
    "\74\0\1\u032b\16\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\13\44\1\u01cb\6\44\1\u017b\1\u01cd\1\u01ce\4\44"+
    "\1\u02c0\3\0\1\44\1\0\2\44\1\u01cd\2\0\1\u017c"+
    "\47\0\1\u024b\6\0\1\u017c\1\u024d\1\u024e\4\0\1\u02c5"+
    "\7\0\1\u024d\2\0\1\u017c\7\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\2\44\1\u032c\27\44\3\0\1\44"+
    "\1\0\3\44\41\0\1\u032d\51\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\2\44\1\u0129\27\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\u032e\25\44\3\0\1\44\1\0\3\44"+
    "\12\0\1\44\10\0\1\44\2\0\4\44\5\0\13\44"+
    "\1\u0174\16\44\3\0\1\44\1\0\3\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\21\44\1\u01b3\10\44"+
    "\3\0\1\44\1\0\1\44\1\u01b3\1\44\12\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\24\44\1\u019e\5\44"+
    "\3\0\1\44\1\0\3\44\43\0\1\u032f\47\0\1\44"+
    "\10\0\1\44\2\0\4\44\5\0\23\44\1\u012a\6\44"+
    "\3\0\1\44\1\0\2\44\1\u012a\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\1\u0301\31\44\3\0\1\44"+
    "\1\0\3\44\12\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\4\44\1\u0330\25\44\3\0\1\44\1\0\3\44"+
    "\37\0\1\u0302\104\0\1\u0331\47\0\1\44\10\0\1\44"+
    "\2\0\4\44\5\0\15\44\1\u0230\14\44\3\0\1\44"+
    "\1\0\1\u0230\2\44\54\0\1\u0266\21\0\1\u0266\14\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\4\44\1\206"+
    "\25\44\3\0\1\44\1\0\3\44\12\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\22\44\1\u0332\7\44\3\0"+
    "\1\44\1\0\3\44\2\0\1\u0333\7\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\5\44\1\u0334\24\44\3\0"+
    "\1\44\1\0\3\44\44\0\1\u0335\115\0\1\u0333\21\0"+
    "\1\u0333\7\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\32\44\3\0\1\u0102\1\0\3\44\74\0\1\u0121\16\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\16\44\1\u0336"+
    "\13\44\3\0\1\44\1\0\3\44\55\0\1\u0337\35\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\22\44\1\u0338"+
    "\7\44\3\0\1\44\1\0\3\44\2\0\1\u0339\56\0"+
    "\1\u0339\21\0\1\u0339\7\0\1\44\10\0\1\44\2\0"+
    "\4\44\5\0\21\44\1\u033a\10\44\3\0\1\44\1\0"+
    "\1\44\1\u033a\1\44\60\0\1\u033b\16\0\1\u033b\13\0"+
    "\1\44\10\0\1\44\2\0\4\44\5\0\32\44\3\0"+
    "\1\u033c\1\0\3\44\74\0\1\u033d\16\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\5\44\1\u033e\24\44\3\0"+
    "\1\44\1\0\3\44\44\0\1\u033f\46\0\1\44\10\0"+
    "\1\44\2\0\4\44\5\0\21\44\1\u0340\10\44\3\0"+
    "\1\44\1\0\1\44\1\u0340\1\44\60\0\1\u0341\16\0"+
    "\1\u0341\13\0\1\44\10\0\1\44\2\0\4\44\5\0"+
    "\32\44\3\0\1\u0342\1\0\3\44\74\0\1\u0343\60\0"+
    "\1\u0344\21\0\1\u0344\14\0\1\44\10\0\1\44\2\0"+
    "\1\44\1\146\2\44\5\0\15\44\1\146\14\44\3\0"+
    "\1\44\1\0\1\146\2\44\27\0\1\171\24\0\1\171"+
    "\21\0\1\171\14\0\1\44\10\0\1\44\2\0\4\44"+
    "\5\0\32\44\3\0\1\u0285\1\0\3\44\74\0\1\u028e"+
    "\16\0\1\44\10\0\1\44\2\0\4\44\5\0\25\44"+
    "\1\u02b7\4\44\3\0\1\44\1\0\3\44\64\0\1\u0345"+
    "\53\0\1\u0346\100\0\1\u0347\114\0\1\u0187\77\0\1\u0348"+
    "\111\0\1\u0349\60\0\1\u016d\41\0";

  private static int [] zzUnpacktrans() {
    int [] result = new int[48295];
    int offset = 0;
    offset = zzUnpacktrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpacktrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\3\0\1\11\2\1\11\11\1\1\2\11\2\1\2\11"+
    "\31\1\3\11\3\1\2\11\1\1\1\11\1\1\1\11"+
    "\2\0\5\11\23\1\1\0\22\1\1\0\3\1\1\0"+
    "\13\1\1\11\13\1\1\0\6\1\1\0\6\1\1\11"+
    "\1\0\1\1\7\0\1\11\1\0\2\11\1\1\1\0"+
    "\6\1\1\0\1\1\1\11\2\1\1\0\1\1\1\0"+
    "\7\1\1\0\2\1\1\0\1\1\1\0\1\1\1\0"+
    "\3\1\1\0\12\1\1\0\2\1\1\0\2\1\2\0"+
    "\1\1\1\0\5\1\1\0\2\1\1\0\3\1\2\0"+
    "\15\1\1\0\1\1\1\0\24\1\1\0\2\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\3\1\14\0"+
    "\4\1\1\11\7\1\1\11\2\1\1\0\1\1\1\0"+
    "\1\1\1\11\2\1\1\0\1\1\1\0\5\1\1\0"+
    "\2\1\1\0\4\1\1\0\2\1\1\0\1\1\5\0"+
    "\1\1\1\11\4\1\1\0\1\11\2\1\2\0\2\1"+
    "\1\0\2\1\1\0\5\1\1\0\2\1\1\0\1\1"+
    "\1\0\1\1\1\0\5\1\1\0\4\1\1\0\6\1"+
    "\1\0\3\1\1\0\1\1\1\0\2\1\1\0\2\1"+
    "\6\0\1\11\2\0\2\1\1\0\6\1\1\0\1\1"+
    "\1\0\2\1\1\0\1\1\1\11\3\1\1\0\1\1"+
    "\1\0\2\1\1\0\3\1\1\0\1\1\5\0\2\1"+
    "\1\11\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\6\1\1\0\4\1"+
    "\2\0\1\1\1\0\4\1\1\0\2\1\1\0\7\1"+
    "\1\0\2\1\1\0\2\1\1\0\1\11\3\0\2\1"+
    "\1\0\10\1\1\0\1\1\1\0\1\1\1\0\2\1"+
    "\1\11\1\1\1\11\1\1\1\0\2\1\1\0\2\1"+
    "\1\0\1\1\2\0\5\1\2\0\1\1\1\11\1\1"+
    "\1\0\1\1\1\0\2\1\1\0\2\1\1\11\1\1"+
    "\2\0\2\1\1\0\5\1\1\0\2\1\1\0\2\1"+
    "\2\0\1\1\1\11\1\0\13\1\2\0\1\1\4\0"+
    "\2\1\1\0\6\1\1\0\1\1\1\0\1\1\1\0"+
    "\2\1\1\0\2\1\1\0\2\1\2\0\1\1\1\0"+
    "\3\1\1\0\1\1\1\0\2\1\1\0\3\1\1\0"+
    "\2\1\1\0\1\1\1\11\1\1\4\0\3\1\1\0"+
    "\12\1\6\0\1\1\1\0\6\1\1\0\1\1\1\11"+
    "\1\1\1\0\2\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\10\1\1\0\5\1\1\0\3\1\4\0\2\1\1\0"+
    "\4\1\1\0\1\1\1\0\3\1\4\0\4\1\1\0"+
    "\1\1\1\0\1\1\1\0\3\1\1\0\2\1\1\0"+
    "\1\1\1\0\1\1\1\11\6\1\1\0\2\1\1\0"+
    "\2\1\1\11\2\1\3\0\1\1\1\0\3\1\1\0"+
    "\2\1\2\0\2\1\1\11\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\3\1\1\0\1\1\1\0\5\1\1\0"+
    "\3\1\2\0\1\1\1\0\3\1\2\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\1\1\0\1\1\1\0\3\1\1\0\1\1\7\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[841];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** Number of newlines encountered up to the start of the matched text. */
  @SuppressWarnings("unused")
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  @SuppressWarnings("unused")
  protected int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  SqlppLiteLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** Returns the maximum size of the scanner buffer, which limits the size of tokens. */
  private int zzMaxBufferLen() {
    return Integer.MAX_VALUE;
  }

  /**  Whether the scanner buffer can grow to accommodate a larger token. */
  private boolean zzCanGrow() {
    return true;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException
  {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { return TokenType.BAD_CHARACTER;
            }
          // fall through
          case 85: break;
          case 2:
            { return TokenType.WHITE_SPACE;
            }
          // fall through
          case 86: break;
          case 3:
            { yybegin(DoubleQuotedString); return GeneratedTypes.DQUOTE;
            }
          // fall through
          case 87: break;
          case 4:
            { return GeneratedTypes.PERCENT;
            }
          // fall through
          case 88: break;
          case 5:
            { return GeneratedTypes.AMPERSAND;
            }
          // fall through
          case 89: break;
          case 6:
            { yybegin(SingleQuotedString); return GeneratedTypes.QUOTE;
            }
          // fall through
          case 90: break;
          case 7:
            { return GeneratedTypes.LPAREN;
            }
          // fall through
          case 91: break;
          case 8:
            { return GeneratedTypes.RPAREN;
            }
          // fall through
          case 92: break;
          case 9:
            { return GeneratedTypes.ASTERISK;
            }
          // fall through
          case 93: break;
          case 10:
            { return GeneratedTypes.PLUS;
            }
          // fall through
          case 94: break;
          case 11:
            { return GeneratedTypes.COMMA;
            }
          // fall through
          case 95: break;
          case 12:
            { return GeneratedTypes.MINUS_SIGN;
            }
          // fall through
          case 96: break;
          case 13:
            { return GeneratedTypes.DOT;
            }
          // fall through
          case 97: break;
          case 14:
            { return GeneratedTypes.SLASH;
            }
          // fall through
          case 98: break;
          case 15:
            { return GeneratedTypes.NBR;
            }
          // fall through
          case 99: break;
          case 16:
            { return GeneratedTypes.COLON;
            }
          // fall through
          case 100: break;
          case 17:
            { return GeneratedTypes.SEMICOLON;
            }
          // fall through
          case 101: break;
          case 18:
            { return GeneratedTypes.LESSTHAN;
            }
          // fall through
          case 102: break;
          case 19:
            { return GeneratedTypes.EQUAL;
            }
          // fall through
          case 103: break;
          case 20:
            { return GeneratedTypes.MORETHAN;
            }
          // fall through
          case 104: break;
          case 21:
            { return GeneratedTypes.IDENTIFIER;
            }
          // fall through
          case 105: break;
          case 22:
            { return GeneratedTypes.LBRACKET;
            }
          // fall through
          case 106: break;
          case 23:
            { return GeneratedTypes.RBRACKET;
            }
          // fall through
          case 107: break;
          case 24:
            { return GeneratedTypes.BACKTICK;
            }
          // fall through
          case 108: break;
          case 25:
            { return GeneratedTypes.PIPE;
            }
          // fall through
          case 109: break;
          case 26:
            { return GeneratedTypes.STRING_CHAR;
            }
          // fall through
          case 110: break;
          case 27:
            { yybegin(YYINITIAL); return GeneratedTypes.QUOTE;
            }
          // fall through
          case 111: break;
          case 28:
            { yybegin(YYINITIAL); return GeneratedTypes.DQUOTE;
            }
          // fall through
          case 112: break;
          case 29:
            { return GeneratedTypes.NOT_EQUAL;
            }
          // fall through
          case 113: break;
          case 30:
            { return GeneratedTypes.BINARY_SHIFT_LEFT;
            }
          // fall through
          case 114: break;
          case 31:
            { return GeneratedTypes.LESSTHAN_OR_EQUAL;
            }
          // fall through
          case 115: break;
          case 32:
            { return GeneratedTypes.LESSTHAN_OR_MORETHAN;
            }
          // fall through
          case 116: break;
          case 33:
            { return GeneratedTypes.DOUBLE_EQUAL;
            }
          // fall through
          case 117: break;
          case 34:
            { return GeneratedTypes.MORETHAN_OR_EQUAL;
            }
          // fall through
          case 118: break;
          case 35:
            { return GeneratedTypes.AS;
            }
          // fall through
          case 119: break;
          case 36:
            { return GeneratedTypes.BY;
            }
          // fall through
          case 120: break;
          case 37:
            { return GeneratedTypes.IN;
            }
          // fall through
          case 121: break;
          case 38:
            { return GeneratedTypes.IS;
            }
          // fall through
          case 122: break;
          case 39:
            { return GeneratedTypes.FUNCS;
            }
          // fall through
          case 123: break;
          case 40:
            { return GeneratedTypes.ON;
            }
          // fall through
          case 124: break;
          case 41:
            { return GeneratedTypes.OR;
            }
          // fall through
          case 125: break;
          case 42:
            { return GeneratedTypes.DOUBLE_PIPE;
            }
          // fall through
          case 126: break;
          case 43:
            { return GeneratedTypes.ESCAPED_QUOTE;
            }
          // fall through
          case 127: break;
          case 44:
            { return GeneratedTypes.ESCAPE_SEQUENCE;
            }
          // fall through
          case 128: break;
          case 45:
            { return GeneratedTypes.ESCAPED_DQUOTE;
            }
          // fall through
          case 129: break;
          case 46:
            { return GeneratedTypes.ALL;
            }
          // fall through
          case 130: break;
          case 47:
            { return GeneratedTypes.AND;
            }
          // fall through
          case 131: break;
          case 48:
            { return GeneratedTypes.ANY;
            }
          // fall through
          case 132: break;
          case 49:
            { return GeneratedTypes.ASC;
            }
          // fall through
          case 133: break;
          case 50:
            { return GeneratedTypes.END;
            }
          // fall through
          case 134: break;
          case 51:
            { return GeneratedTypes.NOT;
            }
          // fall through
          case 135: break;
          case 52:
            { return GeneratedTypes.CASE;
            }
          // fall through
          case 136: break;
          case 53:
            { return GeneratedTypes.DESC;
            }
          // fall through
          case 137: break;
          case 54:
            { return GeneratedTypes.ELSE;
            }
          // fall through
          case 138: break;
          case 55:
            { return GeneratedTypes.FROM;
            }
          // fall through
          case 139: break;
          case 56:
            { return GeneratedTypes.JOIN;
            }
          // fall through
          case 140: break;
          case 57:
            { return GeneratedTypes.LEFT;
            }
          // fall through
          case 141: break;
          case 58:
            { return GeneratedTypes.LIKE;
            }
          // fall through
          case 142: break;
          case 59:
            { return GeneratedTypes.NULL;
            }
          // fall through
          case 143: break;
          case 60:
            { return GeneratedTypes.SOME;
            }
          // fall through
          case 144: break;
          case 61:
            { return GeneratedTypes.THEN;
            }
          // fall through
          case 145: break;
          case 62:
            { return GeneratedTypes.TRUE;
            }
          // fall through
          case 146: break;
          case 63:
            { return GeneratedTypes.WHEN;
            }
          // fall through
          case 147: break;
          case 64:
            { return GeneratedTypes.FALSE;
            }
          // fall through
          case 148: break;
          case 65:
            { return GeneratedTypes.GROUP;
            }
          // fall through
          case 149: break;
          case 66:
            { return GeneratedTypes.INNER;
            }
          // fall through
          case 150: break;
          case 67:
            { return GeneratedTypes.LIMIT;
            }
          // fall through
          case 151: break;
          case 68:
            { return GeneratedTypes.ORDER;
            }
          // fall through
          case 152: break;
          case 69:
            { return GeneratedTypes.OUTER;
            }
          // fall through
          case 153: break;
          case 70:
            { return GeneratedTypes.WHERE;
            }
          // fall through
          case 154: break;
          case 71:
            { return GeneratedTypes.EXISTS;
            }
          // fall through
          case 155: break;
          case 72:
            { return GeneratedTypes.HAVING;
            }
          // fall through
          case 156: break;
          case 73:
            { return GeneratedTypes.NOCASE;
            }
          // fall through
          case 157: break;
          case 74:
            { return GeneratedTypes.OFFSET;
            }
          // fall through
          case 158: break;
          case 75:
            { return GeneratedTypes.SELECT;
            }
          // fall through
          case 159: break;
          case 76:
            { return GeneratedTypes.VALUED;
            }
          // fall through
          case 160: break;
          case 77:
            { return GeneratedTypes.BETWEEN;
            }
          // fall through
          case 161: break;
          case 78:
            { return GeneratedTypes.MISSING;
            }
          // fall through
          case 162: break;
          case 79:
            { return GeneratedTypes.UNICODE;
            }
          // fall through
          case 163: break;
          case 80:
            { return GeneratedTypes.DISTINCT;
            }
          // fall through
          case 164: break;
          case 81:
            { return GeneratedTypes.NOUNICODE;
            }
          // fall through
          case 165: break;
          case 82:
            { return GeneratedTypes.SATISFIES;
            }
          // fall through
          case 166: break;
          case 83:
            { return GeneratedTypes.DIACRITICS;
            }
          // fall through
          case 167: break;
          case 84:
            { return GeneratedTypes.NODIACRITICS;
            }
          // fall through
          case 168: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
