<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.couchbase.couchbase-intellij-plugin</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Couchbase</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="devadvocates@couchbase.com" url="https://www.couchbase.com">Couchbase</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
            Couchbase is an award-winning distributed NoSQL cloud database that delivers unmatched versatility, performance, scalability, and financial value for all of your cloud, mobile, on-premises, hybrid, distributed cloud, and edge computing applications.<br>
            The plugin provides integrated support for Couchbase within the IntelliJ IDEA, making it easier to interact with your Couchbase databases directly from your development environment.<br>
            <ul>
              <li><strong>Connection Management:</strong> Easily connect to your local or remote Couchbase clusters and manage your connections within the IntelliJ IDEA.</li>
              <li><strong>Data Manipulation:</strong> View, add, update, and delete documents in your Couchbase buckets directly from IntelliJ.</li>
              <li><strong>SQL++ Support:</strong> Write and execute SQL++ queries from within IntelliJ. The plugin includes syntax highlighting, error checking, and auto-completion features for SQL++ (previously known as N1QL), making it easier to write and debug your queries.</li>
            </ul>
            For more information visit the
            <a href="https://github.com/couchbaselabs/couchbase_jetbrains_plugin">project repo</a>.
            ]]>
    </description>

    <change-notes>
        <![CDATA[
        <h2>New Features</h2>
        <ul>
          <li>You can now cancel queries</li>
          <li>There are templates for select (sel), insert (ins), delete (del), and update (upd)</li>
        </ul>
        <h2>Bug Fixes</h2>
        <ul>
          <li>Fixed an issue that was making autocomplete not work properly</li>
        </ul>
        ]]>
    </change-notes>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Keep this block here for future reference.-->
    <!--    <applicationListeners>-->
    <!--        <listener class=" com.couchbase.intellij.listener.AppLifecycle"-->
    <!--                  topic="com.intellij.ide.ApplicationInitializedListener"-->
    <!--                  activeInHeadlessMode="false"-->
    <!--                  activeInTestMode="true"/>-->
    <!--        <listener-->
    <!--                class="com.couchbase.intellij.listener.LifecycleListener"-->
    <!--                topic="com.intellij.ide.plugins.DynamicPluginListener" activeInTestMode="true"/>-->
    <!--    </applicationListeners>-->
    <!--    <applicationListeners>-->
    <!--    <listener class="com.couchbase.intellij.listener.MyFileDocumentManagerListener"-->
    <!--              topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>-->
    <!--</applicationListeners>-->

    <projectListeners>
        <listener
                class="com.couchbase.intellij.listener.ToolWindowListener"
                topic="com.intellij.openapi.wm.ex.ToolWindowManagerListener"/>
    </projectListeners>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <applicationService serviceImplementation="com.couchbase.intellij.tree.iq.settings.OpenAISettingsState"/>
        <applicationService serviceImplementation="com.couchbase.intellij.persistence.storage.ClustersStorage"/>
        <applicationService serviceImplementation="com.couchbase.intellij.persistence.storage.QueryFiltersStorage"/>
        <applicationService serviceImplementation="com.couchbase.intellij.persistence.storage.FavoriteQueryStorage"/>
        <applicationService serviceImplementation="com.couchbase.intellij.persistence.storage.QueryHistoryStorage"/>
        <applicationService serviceImplementation="com.couchbase.intellij.tree.cblite.storage.CBLDatabaseStorage"/>

        <toolWindow id="Couchbase" anchor="right" icon="/assets/icons/couchbase.svg"
                    factoryClass="com.couchbase.intellij.tree.CouchbaseWindowFactory"/>

        <toolWindow id="Couchbase Output" anchor="bottom" icon="/assets/icons/couchbase.svg"
                    factoryClass="com.couchbase.intellij.workbench.QueryResultToolWindowFactory"/>


        <fileDocumentSynchronizationVetoer implementation="com.couchbase.intellij.listener.JsonDocumentListener"/>


        <fileType name="SQL++ file" implementationClass="org.intellij.sdk.language.SQLPPFileType"
                  fieldName="INSTANCE"
                  language="sqlpp"
                  extensions="sqlpp"/>
        <fileEditorProvider implementation="com.couchbase.intellij.workbench.CustomSqlFileEditorProvider"/>

        <lang.parserDefinition
                language="sqlpp"
                implementationClass="org.intellij.sdk.language.SqlppParserDefinition"/>

        <lang.syntaxHighlighterFactory
                language="sqlpp"
                implementationClass="org.intellij.sdk.language.SqlppSyntaxHighlighterFactory"/>

        <completion.contributor language="sqlpp"
                                implementationClass="org.intellij.sdk.language.completion.SqlppCompletionContributor"/>

        <fileType name="SQL++ Lite file"
                  implementationClass="com.couchbase.intellij.tree.cblite.sqlppl.SQLPPLiteFileType"
                  fieldName="INSTANCE"
                  language="sqlppl"
                  extensions="sqlppl"/>
        <fileEditorProvider implementation="com.couchbase.intellij.tree.cblite.sqlppl.SQLPPLiteFileEditorProvider"/>

        <lang.syntaxHighlighterFactory
                language="sqlppl"
                implementationClass="org.intellij.sdk.language.cblite.SqlppLiteSyntaxHighlighterFactory"/>

        <lang.parserDefinition
                language="sqlppl"
                implementationClass="org.intellij.sdk.language.cblite.SqlppLiteParserDefinition"/>

        <completion.contributor language="sqlppl"
                                implementationClass="org.intellij.sdk.language.completion.cblite.SqlppLiteCompletionContributor"/>
    </extensions>

    <resource-bundle>messages.ChatGptBundle</resource-bundle>

    <actions>

        <action id="PillowFightAction"
                class="com.couchbase.intellij.actions.PillowFightAction"
                text="Couchbase Pillow Fight"
                description="Start a Couchbase Pillow Fight operation for performance testing.">
        </action>

        <action id="DDLExport"
                class="com.couchbase.intellij.actions.DDLExportAction"
                text="Couchbase DDL Export"
                description="Export the DDL (Data Definition Language) statements of your database.">
        </action>

        <action id="DataExport"
                class="com.couchbase.intellij.actions.DataExportAction"
                text="Couchbase Data Export"
                description="Export data from your database to a file.">
        </action>

        <action id="DataImport"
                class="com.couchbase.intellij.actions.DataImportAction"
                text="Couchbase Data Import"
                description="Import data into your database from a file.">
        </action>

    </actions>


</idea-plugin>